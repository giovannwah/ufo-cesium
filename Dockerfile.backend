# syntax=docker/dockerfile:1
FROM python:3.9-alpine

ARG POETRY_VERSION

ENV POETRY_VERSION $POETRY_VERSION
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PYTHONHASHSEED random
ENV PIP_NO_CACHE_DIR off
ENV PIP_DISABLE_PIP_VERSION_CHECK on
ENV PIP_DEFAULT_TIMEOUT 100

WORKDIR /install
# Install poetry
RUN pip install "poetry==$POETRY_VERSION"

COPY ./backend/poetry.lock ./backend/pyproject.toml /install/

# force global install
RUN poetry config virtualenvs.create false

# Install dependencies
RUN apk add --no-cache postgresql-libs && \
    apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev && \
    poetry install --no-interaction --no-ansi && \
    apk --purge del .build-deps

ENV DJANGO_SETTINGS_MODULE ufo.settings

WORKDIR /app

# Copy project
# COPY . /code/
